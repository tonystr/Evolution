<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hvel = 0;
vvel = 0;

hacc = 0;
vacc = 0;

spd = 0;

target_x = x;
target_y = y;
distt = 1;

fitness = 0;
dead = false;

controller = noone;

size = 3;

completed = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Physics movement

if(!instance_exists(controller)) {
    instance_destroy();
    show_debug_message("destroy");
    exit;
}

if(!completed) {
    if(controller.count &lt; controller.lifespan &amp;&amp; !dead) {
        show_debug_message(string(target_y));
        var d = point_distance(x,y,target_x,target_y);
        if(d &lt; distt) distt = d;
    
        roc_applyforce(spd, dna[controller.count], id);
        
        hvel += hacc;
        vvel += vacc;
        
        x += hvel;
        y += vvel;
        
        hacc *= 0;
        vacc *= 0;
        
        if( x &gt;= controller.rect_xf &amp;&amp; 
            x &lt;= controller.rect_x2 &amp;&amp; 
            y &gt;= controller.rect_y2 &amp;&amp; 
            y &lt;= controller.rect_yf) {
            
            dead = true;
        } else if(x &gt;= view_xview[0]+view_wview[0] || 
                  x &lt;= 0 ||
                  y &gt;= view_yview[0]+view_hview[0] ||
                  y &lt;= 0) {
                  
            dead = true;
        }
        
        if(distance_to_point(target_x, target_y) &lt; size/2) completed = true;
    }
} else controller.count = controller.lifespan-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(c_white);
if(dead) draw_set_color(c_red);
draw_circle(x,y,size, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
